----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date: 11/07/2023 01:07:48 PM
-- Design Name: 
-- Module Name: work_reg_block - Behavioral
-- Project Name: 
-- Target Devices: 
-- Tool Versions: 
-- Description: 
-- 
-- Dependencies: 
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
-- 
----------------------------------------------------------------------------------


library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity work_reg_block is
    Port ( save_wreg : in STD_LOGIC;
           D : in STD_LOGIC_VECTOR(7 downto 0);
           restore_wreg : in STD_LOGIC;
           ena : in STD_LOGIC;
           clk : in STD_LOGIC;
           rst : in STD_LOGIC;
           Q : out STD_LOGIC_VECTOR (7 downto 0));
end work_reg_block;


architecture Behavioral of work_reg_block is

signal muxOut : STD_LOGIC_VECTOR ( 7 downto 0 );
signal reg_Out: STD_LOGIC_VECTOR ( 7 downto 0 );

begin

With restore_wreg select
    muxOut <= D when '0', reg_Out when '1';


process (clk) is begin
   if rising_edge(clk) then 
        if(save_wreg = '1') then 
            reg_Out <= muxOut;
        elsif(rst ='1') then
            reg_Out <= "00000000";
   end if;
   end if;
   end process;
   
 process (clk) begin
 if rising_edge (clk) then
     if(restore_wreg = '1' or ena = '1') then
            Q <= muxOut;
     elsif(rst = '1') then
        Q <= "00000000";
 
 end if;
 end if;
 end process;



end Behavioral;
